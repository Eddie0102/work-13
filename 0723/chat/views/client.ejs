<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <script src="/socket.io/socket.io.js"></script>
    <style>
      #wrap {
        margin: 0 auto;
      }
      ul,
      li {
        text-align: center;
        list-style: none;
        padding-right: 20px;
      }
      h3 {
        margin: 30px auto;
        text-align: center;
      }
      #room,
      #chat {
        width: 420px;
        height: 700px;
        border: 1px solid black;
        margin: 0 auto;
        text-align: center;
        background-color: skyblue;
        position: relative;
      }
      #userName,
      #roomName {
        font-size: 20px;
        margin: 10px;
      }

      #chat-message,
      button {
        font-size: 16px;
      }
    </style>
  </head>
  <body>
    <div id="wrap">
      <h3>채팅방</h3>

      <div id="room">
        <form id="room-form">
          <input type="text" id="userName" placeholder="사용자 이름" /><br />
          <input
            type="text"
            id="roomName"
            placeholder="채팅방 만들기"
          /><br /><br />
          <button>채팅방 입장</button>
        </form>
        <ul id="room-list"></ul>
      </div>

      <div id="chat" hidden>
        <div id="message">
          <div id="notice"></div>
        </div>
        <form id="chat-form">
          <select id="userList"></select>
          <input type="text" id="chat-message" placeholder="메세지 입력" />
          <button>입력</button>
        </form>
      </div>
    </div>
    <!-- ------------------------------------ -->
    <script>
      const socket = io();
      const chatForm = document.querySelector("#chat-form");
      const roomForm = document.querySelector("#room-form");
      const message = document.querySelector("#message");
      const notice = document.querySelector("#notice");
      const clientName = document.querySelector("#userName").value;
      // chat 폼 이벤트
      chatForm.addEventListener("submit", (e) => {
        e.preventDefault();
        const userName = roomForm.querySelector("#userName");
        const msg = chatForm.querySelector("#chat-message");
        const user = chatForm.querySelector("#select").value;
        socket.emit("sendMessage", {
          userName: userName.value,
          message: msg.value,
          user: clientName,
          select: user.value,
        });
        msg.value = "";
      });
      // 채팅 메세지를 출력하는 이벤트
      socket.on("newMessage", (arg) => {
        const myName = roomForm.querySelector("#userName").value;

        console.log(arg);
        const p = document.createElement("p");

        if (dm) {
          if (myName === arg.userName) {
            // 내가 입력한 채팅
            p.textContent = `[DM] ${myName}: ${arg.message}`;
            p.style.textAlign = "right";
            p.style.color = "darkgray";
            // p.style.width = "fit-content";
            message.appendChild(p);
          } else {
            // 타인이 입력한 채팅
            p.textContent = `[DM] ${arg.userName}: ${arg.message}`;
            p.style.textAlign = "left";
            p.style.color = "darkgray";
            message.appendChild(p);
          }
        } else {
          if (myName === arg.userName) {
            // 내가 입력한 채팅
            p.textContent = ` ${myName}: ${arg.message}`;
            p.style.textAlign = "right";
            // p.style.width = "fit-content";
            message.appendChild(p);
          } else {
            // 타인이 입력한 채팅
            p.textContent = `${arg.userName}: ${arg.message}`;
            p.style.textAlign = "left";
            message.appendChild(p);
          }
        }
      });

      // 폼 이벤트
      roomForm.addEventListener("submit", (e) => {
        e.preventDefault();
        const roomName = roomForm.querySelector("#roomName").value;
        const userName = roomForm.querySelector("#userName").value;
        if (roomName === "" || userName === "") {
          alert("방 이름과 닉네임을 확인하세요");
          return;
        }
        socket.emit("create", { roomName, userName });
        const room = document.querySelector("#room");
        const chat = document.querySelector("#chat");
        room.hidden = true;
        chat.hidden = false;
        clientName = userName;
      });

      // 소켓 이벤트
      socket.on("notice", (arg) => {
        console.log(arg);
        const p = document.createElement("p");
        p.textContent = arg;
        notice.appendChild(p);
      });
      socket.on("roomList", (arg) => {
        const roomList = dment.ocuquerySelector("#room-list");
        roomList.textContent = "";
        console.log("roomList", arg);
        arg.forEach((room) => {
          const li = document.createElement("li");
          li.textContent = room;
          roomList.appendChild(li);
        });
      });
      socket.on("userList", (arg) => {
        const lists = document.querySelector("#userList");
        let options = '<option value="all">전체</option>';
        for (let i of arg) {
          option += `<option value=${i.key}>${i.userName}</option>`;
        }
        lists.innerHTML = options;
      });
    </script>
  </body>
</html>
