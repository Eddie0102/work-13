<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="https://code.jquery.com/jquery-3.7.1.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>

<body>
    <form name="register-form">

        <label for="name">이름</label>
        <input type="text" id="name" required><br />
        <label for="email">이메일</label>
        <input type="email" id="email" required><br /><br />


        <button type="button" onclick="ajaxGet()">ajax get 제출</button>
        <button type="button" onclick="ajaxPost()">ajax post 제출</button>
        <button type="button" onclick="axiosGet()">axios get 제출</button>
        <button type="button" onclick="axiosPost()">axios post 제출</button>
        <button type="button" onclick="fetchGet()">fetch get 제출</button>
        <button type="button" onclick="fetchPost()">fetch post 제출</button>
    </form>
    <div class="result"></div>
    <script>
        const resultBox = document.querySelector('.result');
        function ajaxGet() {
            // 폼 가져오기
            const form = document.forms['register-form'];
            // 백엔드로 보내는 데이터
            const data = {
                name: form.name.value,
                email: form.email.value,
            }
            console.log(data);
            // ajax
            $.ajax({
                type: 'GET',
                url: '/ajax',
                data: data,
                success: (res) => {
                    console.log('res:', res);
                    resultBox.textContent = `${res.user}님의 이메일주소는 ${res.email}입니다 (ajax-GET)`;
                },
            })
        }
        function ajaxPost() {
            const form = document.forms['register-form'];
            if (form.name.value === '') {
                alert('이름을 입력하세요');
                return;
            }
            $.ajax({
                type: "POST",
                url: '/ajax',
                data: {
                    name: form.name.value,
                    email: form.email.value,
                },
                success: (res) => {
                    console.log('res: ', res)
                    resultBox.textContent = `${res.user}님의 이메일 주소는 ${res.email}입니다 (ajax-POST)`;
                }
            })
        }
        function axiosGet() {
            const form = document.forms['register-form']
            const data = {
                name: form.name.value,
                email: form.email.value,
            }
            axios({
                method: 'GET',
                url: '/axios',
                // `/axios?name=${form.name.value}&email=${form.email.value}
                params: data //get방식일때 params
            }).then(res => {
                console.log('res', res);
                const { result, name, email } = res.data;
                // const{result,name,email} ={res.data.resultl,res.data.name,res.data.email}과 같은 것 -- 구조분해 할당
                resultBox.textContent = `${name}님의 이메일 주소는 ${email}입니다 (axios-GET)`;
            })

        }
        async function axiosPost() {
            const data = {
                name: document.querySelector("#name").value,
                email: document.querySelector("#email").value,
            };
            const res = await axios({
                method: "POST",
                url: '/axios',
                data,
            });
            console.log('res', res);
            resultBox.textContent = `${res.data.name}님의 이메일 주소는 ${res.data.email}입니다 (axios-POST)`;
        }
        function fetchGet() {
            const name = document.querySelector("#name").value;
            const email = document.querySelector("#email").value;
            const url = `?name=${name}&email=${email}`;

            // fetch?name~~~~
            fetch(`/fetch${url}`, {
                method: 'GET',
            })
                .then((res) => {
                    console.log('res', res);
                    // json 응답을 네이티브 javaseript 객체로 파싱
                    return res.json();
                }).then((data) => {
                    console.log('data', data);
                    resultBox.textContent = `${data.name}님의 이메일 주소는 ${data.email}입니다 (fetch-GET)`;
                })
        }
        async function fetchPost() {
            const data = {
                name: document.querySelector("#name").value,
                email: document.querySelector("#email").value
            };

            const res = await fetch('/fetch', {
                // url을 잘 확인해야함.
                method: 'POST',
                body: JSON.stringify(data),
                headers: {
                    'Content-Type': 'application/json',
                },
            });
            console.log('res',res);
            const result = await res.json();
            console.log('result: ',result);
            resultBox.textContent = `${result.name}님의 이메일 주소는 ${result.email}입니다 (fetch-POST)`;
        }
    </script>
</body>

</html>